{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\library-app\\\\03-frontend\\\\react-libary\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { StatusBar } from \"./Footer/StatusBar\";\nimport { Sound, getCurrentSongName, start, pause } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet songList;\nexport function SongList() {\n  _s();\n  const [songName, setSongName] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      const baseUrl = \"http://localhost:8080/api/songs\";\n      const url = `${baseUrl}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Oh shit!');\n      }\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.songs;\n      const loadedSongs = [];\n      for (const key in responseData) {\n        loadedSongs.push({\n          id: responseData[key].id,\n          name: responseData[key].name,\n          artist: responseData[key].artist,\n          url: responseData[key].url\n        });\n      }\n      setSongs(loadedSongs);\n      setIsLoading(false);\n    };\n    fetchSongs().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n  songList = [];\n  songs.forEach((song, index) => {\n    songList.push( /*#__PURE__*/_jsxDEV(Sound, {\n      path: song.url,\n      name: song.name,\n      artist: song.artist,\n      setS: setSongName\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [songList, /*#__PURE__*/_jsxDEV(StatusBar, {\n      name: songName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NextButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  function NextButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextButtonClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }, this);\n  }\n  function handleNextButtonClick() {\n    getNextSong();\n  }\n}\n_s(SongList, \"mahD6dh6HPHpYkrXen6y5r0POSs=\");\n_c = SongList;\n;\nexport function getNextSong() {\n  for (let i = 0; i < songList.length; i++) {\n    if (songList[i].props.name === getCurrentSongName()) {\n      pause();\n      if (i === songList.length - 1) start(songList[0].props);else start(songList[i + 1].props);\n      break;\n    }\n  }\n}\nexport function getPreviousSong() {\n  for (let i = 0; i < songList.length; i++) {\n    if (songList[i].props.name === getCurrentSongName()) {\n      pause();\n      if (i === 0) start(songList[songList.length - 1].props);else start(songList[i - 1].props);\n      break;\n    }\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["useEffect","useState","SpinnerLoading","StatusBar","Sound","getCurrentSongName","start","pause","songList","SongList","songName","setSongName","songs","setSongs","isLoading","setIsLoading","httpError","setHttpError","fetchSongs","baseUrl","url","response","fetch","ok","Error","responseJson","json","responseData","_embedded","loadedSongs","key","push","id","name","artist","catch","error","message","forEach","song","index","NextButton","handleNextButtonClick","getNextSong","i","length","props","getPreviousSong"],"sources":["C:/Users/Alex/Documents/library-app/03-frontend/react-libary/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { StatusBar } from \"./Footer/StatusBar\";\nimport { Sound, getCurrentSongName, start, pause } from \"./Sound\";\n\nlet songList;\n\nexport function SongList() {\n\n\n  const [songName, setSongName] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  useEffect(() => {\n    const fetchSongs = async() => {\n      const baseUrl = \"http://localhost:8080/api/songs\";\n\n      const url = `${baseUrl}`\n\n      const response = await fetch(url);\n\n      if(!response.ok)\n      {\n        throw new Error('Oh shit!');\n      }\n\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.songs;\n\n      const loadedSongs = [];\n\n      for(const key in responseData)\n      {\n        loadedSongs.push({\n          id: responseData[key].id,\n          name: responseData[key].name,\n          artist: responseData[key].artist,\n          url: responseData[key].url\n        });\n      }\n      setSongs(loadedSongs);\n      setIsLoading(false);\n    };\n    fetchSongs().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    })\n  }, []);\n\n  if (isLoading) {\n    return (\n      <SpinnerLoading/>\n    )\n  }\n\n  songList=[];\n  songs.forEach((song,index)=>{\n  songList.push(<Sound key = {song.id} path = {song.url} name = {song.name} artist = {song.artist} setS = {setSongName}/>)\n})\n    return (\n    <>\n    {songList}\n    <StatusBar\n    name={songName}/>\n    <NextButton/>\n\n    </>\n    );\n\n     function NextButton() {\n      return <button onClick={handleNextButtonClick}>Next</button>;\n    }\n    \n    function handleNextButtonClick() {\n      getNextSong();\n    }\n    \n\n};\n\nexport function getNextSong() \n{\n  for(let i = 0; i < songList.length; i++)\n  {\n    if(songList[i].props.name === getCurrentSongName())\n    {\n      pause();\n      if(i === songList.length - 1)\n      start(songList[0].props);\n      else\n      start(songList[i + 1].props);\n      break;\n    }\n  }\n}\n\nexport function getPreviousSong() \n{\n  for(let i = 0; i < songList.length; i++)\n  {\n    if(songList[i].props.name === getCurrentSongName())\n    {\n      pause();\n      if(i === 0)\n      start(songList[songList.length - 1].props);\n      else\n      start(songList[i - 1].props);\n      break;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}