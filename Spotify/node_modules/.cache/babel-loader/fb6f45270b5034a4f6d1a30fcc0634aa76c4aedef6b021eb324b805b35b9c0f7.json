{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\library-app\\\\03-frontend\\\\react-libary\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { ResumeButton, PauseButton, Sound, getCurrentSongName } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet index;\nexport const SongList = () => {\n  _s();\n  let songList = [];\n  const [songs, setSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      const baseUrl = \"http://localhost:8080/api/songs\";\n      const url = `${baseUrl}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Oh shit!');\n      }\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.songs;\n      const loadedSongs = [];\n      for (const key in responseData) {\n        loadedSongs.push({\n          id: responseData[key].id,\n          name: responseData[key].name,\n          artist: responseData[key].artist,\n          url: responseData[key].url\n        });\n      }\n      setSongs(loadedSongs);\n      setIsLoading(false);\n    };\n    fetchSongs().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  songList = [];\n  songs.forEach((song, index) => {\n    songList.push( /*#__PURE__*/_jsxDEV(Sound, {\n      path: song.url,\n      name: song.name,\n      artist: song.artist\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: songList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ResumeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NextButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(SongList, \"S96V4lBE2CItCSj8pe9CEU8PjS0=\");\n_c = SongList;\nfunction handleNextButtonClick() {\n  let currentSongName = getCurrentSongName();\n  console.log(currentSongName);\n}\nfunction NextButton() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextButtonClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n}\n_c2 = NextButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"SongList\");\n$RefreshReg$(_c2, \"NextButton\");","map":{"version":3,"names":["useEffect","useState","SpinnerLoading","ResumeButton","PauseButton","Sound","getCurrentSongName","index","SongList","songList","songs","setSongs","isLoading","setIsLoading","httpError","setHttpError","fetchSongs","baseUrl","url","response","fetch","ok","Error","responseJson","json","responseData","_embedded","loadedSongs","key","push","id","name","artist","catch","error","message","forEach","song","handleNextButtonClick","currentSongName","console","log","NextButton"],"sources":["C:/Users/Alex/Documents/library-app/03-frontend/react-libary/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { ResumeButton, PauseButton, Sound, getCurrentSongName } from \"./Sound\";\n\nlet index;\n\nexport const SongList = () => {\n  let songList=[];\n\n  const [songs, setSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  useEffect(() => {\n    const fetchSongs = async() => {\n      const baseUrl = \"http://localhost:8080/api/songs\";\n\n      const url = `${baseUrl}`\n\n      const response = await fetch(url);\n\n      if(!response.ok)\n      {\n        throw new Error('Oh shit!');\n      }\n\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.songs;\n\n      const loadedSongs = [];\n\n      for(const key in responseData)\n      {\n        loadedSongs.push({\n          id: responseData[key].id,\n          name: responseData[key].name,\n          artist: responseData[key].artist,\n          url: responseData[key].url\n        });\n      }\n      setSongs(loadedSongs);\n      setIsLoading(false);\n    };\n    fetchSongs().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    })\n  }, []);\n\n  if (isLoading) {\n    return (\n      <SpinnerLoading/>\n    )\n  }\n\n  songList=[];\n  songs.forEach((song,index)=>{\n  songList.push(<Sound key = {song.id} path = {song.url} name = {song.name} artist = {song.artist} />)\n})\n    return (\n    <>\n    <div>\n    {songList}\n    </div>\n\n    <PauseButton/>\n    <ResumeButton/>\n    <NextButton/>\n    </>\n    );\n\n};\n\nfunction handleNextButtonClick() \n{\n  let currentSongName = getCurrentSongName();\n  console.log(currentSongName);\n}\n\nfunction NextButton() \n{\nreturn(\n  <div>\n    <button onClick={handleNextButtonClick}>Next</button>\n  </div>\n)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}