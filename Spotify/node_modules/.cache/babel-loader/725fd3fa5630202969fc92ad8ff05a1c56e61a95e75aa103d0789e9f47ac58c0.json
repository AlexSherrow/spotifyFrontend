{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\library-app\\\\03-frontend\\\\react-libary\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\",\n  _s = $RefreshSig$();\nimport { Component, useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { Sound, getCurrentSongName, start, pause } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet songList;\nexport class SongList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      background: \"white\",\n      textColor: \"black\"\n    };\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseExit = this.handleMouseExit.bind(this);\n    this.handleSongClick = this.handleSongClick.bind(this);\n    this.handleSongNameChange = this.handleSongNameChange.bind(this);\n  }\n}\nexport const LoadSongList = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      const baseUrl = \"http://localhost:8080/api/songs\";\n      const url = `${baseUrl}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Oh shit!');\n      }\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.songs;\n      const loadedSongs = [];\n      for (const key in responseData) {\n        loadedSongs.push({\n          id: responseData[key].id,\n          name: responseData[key].name,\n          artist: responseData[key].artist,\n          url: responseData[key].url\n        });\n      }\n      setSongs(loadedSongs);\n      setIsLoading(false);\n    };\n    fetchSongs().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n  songList = [];\n  songs.forEach((song, index) => {\n    songList.push( /*#__PURE__*/_jsxDEV(Sound, {\n      path: song.url,\n      name: song.name,\n      artist: song.artist\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: songList\n  }, void 0, false);\n};\n_s(LoadSongList, \"S96V4lBE2CItCSj8pe9CEU8PjS0=\");\n_c = LoadSongList;\nexport function getNextSong() {\n  for (let i = 0; i < songList.length; i++) {\n    if (songList[i].props.name === getCurrentSongName()) {\n      pause();\n      if (i === songList.length - 1) start(songList[0].props);else start(songList[i + 1].props);\n      break;\n    }\n  }\n}\nexport function getPreviousSong() {\n  for (let i = 0; i < songList.length; i++) {\n    if (songList[i].props.name === getCurrentSongName()) {\n      pause();\n      if (i === 0) start(songList[songList.length - 1].props);else start(songList[i - 1].props);\n      break;\n    }\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"LoadSongList\");","map":{"version":3,"names":["Component","useEffect","useState","SpinnerLoading","Sound","getCurrentSongName","start","pause","songList","SongList","constructor","props","state","background","textColor","handleMouseEnter","bind","handleMouseExit","handleSongClick","handleSongNameChange","LoadSongList","songs","setSongs","isLoading","setIsLoading","httpError","setHttpError","fetchSongs","baseUrl","url","response","fetch","ok","Error","responseJson","json","responseData","_embedded","loadedSongs","key","push","id","name","artist","catch","error","message","forEach","song","index","getNextSong","i","length","getPreviousSong"],"sources":["C:/Users/Alex/Documents/library-app/03-frontend/react-libary/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { Component, useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { Sound, getCurrentSongName, start, pause } from \"./Sound\";\n\nlet songList;\n\nexport class SongList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      background: \"white\",\n      textColor: \"black\"\n    };\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseExit = this.handleMouseExit.bind(this);\n    this.handleSongClick = this.handleSongClick.bind(this);\n    this.handleSongNameChange = this.handleSongNameChange.bind(this);\n  }\n}\n\nexport const LoadSongList = () => {\n\n  const [songs, setSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  useEffect(() => {\n    const fetchSongs = async() => {\n      const baseUrl = \"http://localhost:8080/api/songs\";\n\n      const url = `${baseUrl}`\n\n      const response = await fetch(url);\n\n      if(!response.ok)\n      {\n        throw new Error('Oh shit!');\n      }\n\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.songs;\n\n      const loadedSongs = [];\n\n      for(const key in responseData)\n      {\n        loadedSongs.push({\n          id: responseData[key].id,\n          name: responseData[key].name,\n          artist: responseData[key].artist,\n          url: responseData[key].url\n        });\n      }\n      setSongs(loadedSongs);\n      setIsLoading(false);\n    };\n    fetchSongs().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    })\n  }, []);\n\n  if (isLoading) {\n    return (\n      <SpinnerLoading/>\n    )\n  }\n\n  songList=[];\n  songs.forEach((song,index)=>{\n  songList.push(<Sound key = {song.id} path = {song.url} name = {song.name} artist = {song.artist} />)\n})\n    return (\n    <>\n    {songList}\n    </>\n    );\n\n};\n\nexport function getNextSong() \n{\n  for(let i = 0; i < songList.length; i++)\n  {\n    if(songList[i].props.name === getCurrentSongName())\n    {\n      pause();\n      if(i === songList.length - 1)\n      start(songList[0].props);\n      else\n      start(songList[i + 1].props);\n      break;\n    }\n  }\n}\n\nexport function getPreviousSong() \n{\n  for(let i = 0; i < songList.length; i++)\n  {\n    if(songList[i].props.name === getCurrentSongName())\n    {\n      pause();\n      if(i === 0)\n      start(songList[songList.length - 1].props);\n      else\n      start(songList[i - 1].props);\n      break;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}