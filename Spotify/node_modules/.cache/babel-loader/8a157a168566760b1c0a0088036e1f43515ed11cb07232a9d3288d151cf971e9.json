{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\library-app\\\\03-frontend\\\\react-libary\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\";\nimport { Component, useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { Sound, getCurrentSongName, start, pause } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet songList;\nclass SongList extends Component {\n  constructor() {\n    var _s = $RefreshSig$();\n    super(...arguments);\n    this.LoadedSongList = _s(() => {\n      _s();\n      const [songs, setSongs] = useState([]);\n      const [isLoading, setIsLoading] = useState(true);\n      const [httpError, setHttpError] = useState(null);\n      useEffect(() => {\n        const fetchSongs = async () => {\n          const baseUrl = \"http://localhost:8080/api/songs\";\n          const url = `${baseUrl}`;\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error('Oh shit!');\n          }\n          const responseJson = await response.json();\n          const responseData = responseJson._embedded.songs;\n          const loadedSongs = [];\n          for (const key in responseData) {\n            loadedSongs.push({\n              id: responseData[key].id,\n              name: responseData[key].name,\n              artist: responseData[key].artist,\n              url: responseData[key].url\n            });\n          }\n          setSongs(loadedSongs);\n          setIsLoading(false);\n        };\n        fetchSongs().catch(error => {\n          setIsLoading(false);\n          setHttpError(error.message);\n        });\n      }, []);\n      if (isLoading) {\n        return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this);\n      }\n      songList = [];\n      songs.forEach((song, index) => {\n        songList.push( /*#__PURE__*/_jsxDEV(Sound, {\n          path: song.url,\n          name: song.name,\n          artist: song.artist\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this));\n      });\n    }, \"S96V4lBE2CItCSj8pe9CEU8PjS0=\");\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: songList\n    }, void 0, false);\n  }\n}\nexport function getNextSong() {\n  for (let i = 0; i < songList.length; i++) {\n    if (songList[i].props.name === getCurrentSongName()) {\n      pause();\n      if (i === songList.length - 1) start(songList[0].props);else start(songList[i + 1].props);\n      break;\n    }\n  }\n}\nexport function getPreviousSong() {\n  for (let i = 0; i < songList.length; i++) {\n    if (songList[i].props.name === getCurrentSongName()) {\n      pause();\n      if (i === 0) start(songList[songList.length - 1].props);else start(songList[i - 1].props);\n      break;\n    }\n  }\n}","map":{"version":3,"names":["Component","useEffect","useState","SpinnerLoading","Sound","getCurrentSongName","start","pause","songList","SongList","LoadedSongList","songs","setSongs","isLoading","setIsLoading","httpError","setHttpError","fetchSongs","baseUrl","url","response","fetch","ok","Error","responseJson","json","responseData","_embedded","loadedSongs","key","push","id","name","artist","catch","error","message","forEach","song","index","render","getNextSong","i","length","props","getPreviousSong"],"sources":["C:/Users/Alex/Documents/library-app/03-frontend/react-libary/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { Component, useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { Sound, getCurrentSongName, start, pause } from \"./Sound\";\n\nlet songList;\n\nclass SongList extends Component {\n  \n  render() {\n    return (\n      <>\n      {songList}\n      </>\n      );\n  }\n\n\n\n  LoadedSongList = () => {\n\n  const [songs, setSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  useEffect(() => {\n    const fetchSongs = async() => {\n      const baseUrl = \"http://localhost:8080/api/songs\";\n\n      const url = `${baseUrl}`\n\n      const response = await fetch(url);\n\n      if(!response.ok)\n      {\n        throw new Error('Oh shit!');\n      }\n\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.songs;\n\n      const loadedSongs = [];\n\n      for(const key in responseData)\n      {\n        loadedSongs.push({\n          id: responseData[key].id,\n          name: responseData[key].name,\n          artist: responseData[key].artist,\n          url: responseData[key].url\n        });\n      }\n      setSongs(loadedSongs);\n      setIsLoading(false);\n    };\n    fetchSongs().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    })\n  }, []);\n\n  if (isLoading) {\n    return (\n      <SpinnerLoading/>\n    )\n  }\n\n  songList=[];\n  songs.forEach((song,index)=>{\n  songList.push(<Sound key = {song.id} path = {song.url} name = {song.name} artist = {song.artist} />)\n})\n\n\n};\n}\n\nexport function getNextSong() \n{\n  for(let i = 0; i < songList.length; i++)\n  {\n    if(songList[i].props.name === getCurrentSongName())\n    {\n      pause();\n      if(i === songList.length - 1)\n      start(songList[0].props);\n      else\n      start(songList[i + 1].props);\n      break;\n    }\n  }\n}\n\nexport function getPreviousSong() \n{\n  for(let i = 0; i < songList.length; i++)\n  {\n    if(songList[i].props.name === getCurrentSongName())\n    {\n      pause();\n      if(i === 0)\n      start(songList[songList.length - 1].props);\n      else\n      start(songList[i - 1].props);\n      break;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}